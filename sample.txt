using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Zyanken_Game
{
    class Program
    {
        static string[] otete = { "グー", "チョキ", "パー" };

        static void Main(string[] args)
        {
            Console.WriteLine("おい、ジャンケンしろよ。\n");
            Console.WriteLine("ジャンケンしてあげますか？");

            while (true)
            /*()内の条件式が真になる限り繰り返す
             continue文が実行されるとループの先頭に戻り、break文が実行されるとループを抜け出す
             →(true)にすることでそれらが無ければ無限ループが発生
            */
            {
                Console.WriteLine("ジャンケンする：Yを入力");
                Console.WriteLine("もう帰る：Nを入力");

                var yesno = Console.ReadLine();

                //入力が適正であるかのチェックを行う
                if (yesno == "y" || yesno == "Y")
                {
                    Console.WriteLine("\n闇のゲームの始まりだ\n");
                    game_start();
                }
                else if (yesno == "n" || yesno == "N")
                {
                    Console.WriteLine("\n帰りたいのを無理に引き留めるのは気が引けるから帰っていいよ\n");
                    Environment.Exit(0);    //無限ループするジャンケンの輪廻から抜け出す
                }
                else
                {
                    Console.WriteLine("\nYESかNOか聞かれたならYESかNOで答えろよ\n");
                }
            }
        }

        static void game_start()
        {
            //ジャンケンで出す手の選択
            Console.WriteLine("運命の選択");
            Console.WriteLine("0:グー");
            Console.WriteLine("1:チョキ");
            Console.WriteLine("2:パー");

            int hand = int.Parse(Console.ReadLine());

            check_hand(ref hand);　//check_handメソッドへ行き、必要ならhandの値を置き換える

            Battle(ref hand);　//Battleメソッドへ行き運命の戦いを行う

        }

        static void check_hand(ref int hand)
        {
            while (true)
            {
                //選択した手が適正かどうかのチェックを行う
                if (hand == (0) || hand == (1) || hand == (2))
                {
                    break;  //値が適正なのでループを抜ける
                }
                else
                {
                    Console.WriteLine("\n運命は三択だぜ");
                    Console.WriteLine("0:グー");
                    Console.WriteLine("1:チョキ");
                    Console.WriteLine("2:パー");

                    hand = int.Parse(Console.ReadLine());
                }
            }
        }


        static void Battle(ref int hand)
        {
            Random rnd = new System.Random();    // インスタンスを生成
            int intResult = rnd.Next(3);         // 0～2の乱数を取得
            int cpu = intResult;                 // 取得した乱数をcpuの手に反映

            //出した手を表示させるために文字列へ変換
            string strhand = hand.ToString();
            string strcpu = cpu.ToString();


            //今はここに文字列としての手を反映させようとしています
            Console.WriteLine("\n自分の出した手：" + otete.GetValue(int.Parse(strhand)));
            Console.WriteLine("相手の出した手：" + otete.GetValue(int.Parse(strcpu)));

            //自分の手と相手の手の差の値からジャンケンの勝敗を出力
            int battle_judge = (hand - cpu + 3) % 3;

            if (battle_judge == 2)
            {
                Console.WriteLine("\n>>>お前の勝ちだぜ!!<<<\n");
            }
            else if (battle_judge == 1)
            {
                //負けると異常な勢いで煽ってくる
                Console.WriteLine("\n>>>お前の負け!!敗北!!人生の敗北者!!生きてて何もいいことがなかった!!死!!!<<<\n");
            }
            else
            {
                Console.WriteLine("\n>>>あいこだぜ!!<<<");
                Console.WriteLine("あいこが出たのでもう一度↓\n");
                //あいこなので手の選択へ戻る
                game_start();
            }

        }

    }

}
